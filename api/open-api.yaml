openapi: 3.0.3
servers: []
info:
  version: 1.0.0
  title: Order Service API
  description: |-
    This is Order Service API documentation based on the OpenAPI 3.0 specification.
tags:
  - name: CreateOrder
    description: Create Order
paths:
  /order:
    post:
      tags:
        - CreateOrder
      summary: Create Order
      description: Creating Order
      operationId: createOrder
      parameters:
        - name: x-api-key
          in: header
          description: ''
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/OrderRequest'
      responses:
        '200':
          description: 'Order created'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderInfo'
        '400':
          description: 'Invalid order request'
        '500':
          description: 'Order request process failed'
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${createOrderLambda.Arn}/invocations"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        type: "aws_proxy"
      security:
        - api_key: [ ]
    options:
      summary: CORS support
      description: Enable CORS by returning correct headers
      responses:
        200:
          description: Default response for CORS method
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content: { }
      x-amazon-apigateway-integration:
        type: mock
        passthroughBehavior: "when_no_match"
        requestTemplates:
          application/json: "{\"statusCode\": 200}"
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'*'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
            responseTemplates:
              application/json: "{\"statusCode\": 200}"
components:
  schemas:
    OrderRequest:
      type: object
      properties:
        productId:
          type: string
          example: '123456'
          description: 'Product Identifier'
          format: '6 character length digit string'
        amount:
          type: string
          example: '2'
          description: 'Amount of product'
          format: 'positive integer string'
        accountId:
          type: string
          example: 'acc-123'
          description: 'Owner account identifier of order'
          format: 'starting with acc prefix string'
    OrderInfo:
      type: object
      properties:
        orderId:
          type: string
          example: '123456'
          description: 'Order Identifier'
          format: 'UUID'
        orderTime:
          type: string
          example: '2'
          description: 'Order creation time'
          format: 'string'
  requestBodies:
    OrderRequest:
      description: Order Data
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OrderRequest'
  securitySchemes:
    api_key:
      type: apiKey
      name: x-api-key
      in: header